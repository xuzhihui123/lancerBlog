# 自定义当前执行文件的名称
name: GitHub Actions Build and Deploy Demo
# 整个流程在master分支发生push事件时触发
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 运行在ubuntu-latest环境的虚拟机中
    steps:
    # 获取仓库源码
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false
    # 构建和部署
    - name: Install and Build
      # 由于示例项目代码并非在根目录,所以要这里手动进入了项目目录
      # 如果你代码本身就处于根目录则不需要再手动进入了
      run: |
        yarn install
        yarn docs:build 
    # 发布到github
    - name: Deploy
      uses: JamesIves/github-pages-deploy-action@releases/v3
      # 环境变量
      with:
        ACCESS_TOKEN: ${{ secrets.BLOG }} # GitHub 密钥 ACCESS_TOKEN 是在第二步Settings的Secrets中新增时定义的Name,要保持一致
        # 发布到指定分支
        BRANCH: gh-pages
        # 构建成果所在目录,默认位置都是在根目录
        FOLDER: docs/.vuepress/dist

   # 3、同步到 gitee 的仓库
    - name: Sync to Gitee
      uses: wearerequired/git-mirror-action@master
      env:
        # 注意在 Settings->Secrets 配置 GITEE_RSA_PRIVATE_KEY
        SSH_PRIVATE_KEY: ${{ secrets.GITEE_RSA_PRIVATE_KEY }}
      with:
        # 注意替换为你的 GitHub 源仓库地址
        source-repo: git@github.com:xuzhihui123/lancerBlog.git
        # 注意替换为你的 Gitee 目标仓库地址
        destination-repo: git@gitee.com:itlancer/lancerBlog.git

    # 4、部署到 Gitee Pages
    - name: Build Gitee Pages
      uses: yanglbme/gitee-pages-action@main
      with:
        # 注意替换为你的 Gitee 用户名
        gitee-username: itlancer
        # 注意在 Settings->Secrets 配置 GITEE_PASSWORD
        gitee-password: ${{ secrets.GITEE_PASSWORD }}
        # 注意替换为你的 Gitee 仓库，仓库名严格区分大小写，请准确填写，否则会出错
        gitee-repo: itlancer/lancerBlog
        # 要部署的分支，默认是 master，若是其他分支，则需要指定（指定的分支必须存在）
        branch: gh-pages